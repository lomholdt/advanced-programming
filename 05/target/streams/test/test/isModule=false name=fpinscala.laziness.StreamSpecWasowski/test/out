[0m[[0minfo[0m] [0m[32mStreamSpecWasowski:[0m[0m
[0m[[0minfo[0m] [0m[32mheadOption[0m[0m
[0m[[0minfo[0m] [0m[32m- should return None on an empty Stream (01)[0m[0m
[0m[[0minfo[0m] [0m[32m- should return the head of the stream packaged in Some (02)[0m[0m
[0m[[0minfo[0m] [0m[32m- should not force the tail of the stream. (03)[0m[0m
[0m[[0minfo[0m] [0m[32mtake[0m[0m
[0m[[0minfo[0m] [0m[32m- should not force any heads nor any tails of the Stream it manipulates (04)[0m[0m
[0m[[0minfo[0m] [0m[32m- should not force (n+1)st head ever (even if we force all elements of take(n)) (05)[0m[0m
[0m[[0minfo[0m] [0m[32m- should s.take(n).take(n) == s.take(n) for any Stream s and any n (06)[0m[0m
[0m[[0minfo[0m] [0m[32mdrop[0m[0m
[0m[[0minfo[0m] [0m[32m- should s.drop(n).drop(m) == s.drop(n+m) for any n, m (additivity) (07)[0m[0m
[0m[[0minfo[0m] [0m[32m- should s.drop(n) does not force any of the dropped elements heads (08)[0m[0m
[0m[[0minfo[0m] [0m[32m- should the above should hold even if we force some stuff in the tail (08)[0m[0m
[0m[[0minfo[0m] [0m[32mmap[0m[0m
[0m[[0minfo[0m] [0m[32m- should x.map(id) == x (where id is the identity function) (09)[0m[0m
[0m[[0minfo[0m] [0m[32m- should map terminates on infinite streams (10)[0m[0m
[0m[[0minfo[0m] [0m[32mappend[0m[0m
[0m[[0minfo[0m] [0m[32m- should append streams bla bla (12)[0m[0m
